---
layout: post
title:  "Notes on Deep Learning (Book)"
date:   2018-03-15 00:00:00
author: 장승환
categories: Notes
tags: DL
---

*In this page I summarize in a succinct and straighforward fashion what I learn from the book [Deep Learning](http://www.deeplearningbook.org/lecture_slides.html){:target="_blank"} by Ian Goodfellow, Yoshua Bengio and Aaron Courville, along with my own thoughts and related resources.*
*I will update this page frequently, like every week, until it's complete.*

---
 
**Acronyms**
* DL: Deep Learning
* MSE: Mean Squared Error

---

Ch. 6 Deep Feedforward Networks

---

#### (6.1) Example: Learning XOR

**Target function:**

$$y = f^*(x) = f^*([x_1, x_2]^T) = XOR(x_1, x_2)$$

where $x = [x_1, x_2]^T \in \\{0, 1\\}^2$.

**Linear Approximator:**

$$\hat{y} = f(x; \theta) = f(x; (w, b)) = x^T + b$$  

where $w = [w_1, w_2]^T \in \mathbb{R}^2$ and $b \in \mathbb{R}$.

**MSE loss function:**

$$J(\theta) = \frac{1}{4}\sum_{x \in X}(f^*(x) - f(x;\theta))^2$$

where $X = \\{[0,0]^T, [0,1]^T, [1,0]^T, [1,1]^T\\}.$

**Optimization:** by solving normal equations

$\cdots$

gives $w = [0, 0]^T, b = \frac{1}{2}$ as the optimizer (minimizer).  
(Meaning that linear model (all by itself) significantly lacks capacity in representing/approximating this particular function.)

<span style="color:red">**Need different approach:**</span>

**Affine feature space transformation:**


---

$$ $$

*To be added..*

---


